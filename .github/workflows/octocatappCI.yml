on: [push, pull_request]

name: OctocatApp CI

jobs:
  init:
    name: Initiate pipeline
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Event: Check run'
        run: echo ${{ github.event_name == 'check_run' }}
      - name: 'Event: Check suite'
        run: echo ${{ github.event_name == 'check_suite' }}
      - name: 'Event: Create'
        run: echo ${{ github.event_name == 'create' }}
      - name: 'Event: Delete'
        run: echo ${{ github.event_name == 'delete' }}
      - name: 'Event: Deployment'
        run: echo ${{ github.event_name == 'deployment' }}
      - name: 'Event: Deployment status'
        run: echo ${{ github.event_name == 'deployment_status' }}
      - name: 'Event: Fork'
        run: echo ${{ github.event_name == 'fork' }}
      - name: 'Event: Gollum (Wiki page update)'
        run: echo ${{ github.event_name == 'gollum' }}
      - name: 'Event: Issue comment'
        run: echo ${{ github.event_name == 'issue_comment' }}
      - name: 'Event: Issues'
        run: echo ${{ github.event_name == 'issues' }}
      - name: 'Event: Label'
        run: echo ${{ github.event_name == 'label' }}
      - name: 'Event: Milestone'
        run: echo ${{ github.event_name == 'milestone' }}
      - name: 'Event: Page build'
        run: echo ${{ github.event_name == 'page_build' }}
      - name: 'Event: Project'
        run: echo ${{ github.event_name == 'project' }}
      - name: 'Event: Project card'
        run: echo ${{ github.event_name == 'project_card' }}
      - name: 'Event: Project column'
        run: echo ${{ github.event_name == 'project_column' }}
      - name: 'Event: Public'
        run: echo ${{ github.event_name == 'public' }}
      - name: 'Event: Pull request'
        run: echo ${{ github.event_name == 'pull_request' }}
      - name: 'Event: Pull request review'
        run: echo ${{ github.event_name == 'pull_request_review' }}
      - name: 'Event: Pull request review comment'
        run: echo ${{ github.event_name == 'pull_request_review_comment' }}
      - name: 'Event: Pull request target'
        run: echo ${{ github.event_name == 'pull_request_target' }}
      - name: 'Event: Push'
        run: echo ${{ github.event_name == 'push' }}
      - name: 'Event: Registry package'
        run: echo ${{ github.event_name == 'registry_package' }}
      - name: 'Event: Release'
        run: echo ${{ github.event_name == 'release' }}
      - name: 'Event: Status'
        run: echo ${{ github.event_name == 'status' }}
      - name: 'Event: Watch'
        run: echo ${{ github.event_name == 'watch' }}
      - name: 'Event: Workflow run'
        run: echo ${{ github.event_name == 'workflow_run' }}

      # - name: Publish NuGet package
      #   id: publish_nuget
      #   uses: rohith/publish-nuget@v2
      #   continue-on-error: true
      #   with:
      #       PROJECT_FILE_PATH: OctocatApp.csproj
      #       TAG_COMMIT: true
      #       NUGET_KEY: ${{secrets.TEST_PKG}}
      #       PACKAGE_NAME: OctocatApp-testpkg

      # - name: Bump release version and create release tag
      #   id: tag_generator
      #   uses: mathieudutour/github-tag-action@v5.1
      #   env:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.tag_generator.outputs.new_tag }}
      #     release_name: Release ${{ steps.tag_generator.outputs.new_tag }}
      #     body: '[CHANGE LOG](HISTORY.md)'

      # - name: Upload Release Asset
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: OctocatApp.csproj
      #     asset_name: OctocatApp.${{ steps.tag_generator.outputs.new_version }}.csproj
      #     asset_content_type: application/csproj

      # - name: Upload Release Asset
      #   id: upload_release_asset2
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: OctocatApp.sln
      #     asset_name: OctocatApp.${{ steps.tag_generator.outputs.new_tag }}.sln
      #     asset_content_type: application/sln

      # - name: Upload Release Asset
      #   id: upload_release_asset3
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: Program.cs
      #     asset_name: Program.${{ steps.tag_generator.outputs.new_tag }}.cs
      #     asset_content_type: application/cs
