on: [push, pull_request]

name: OctocatApp CI

jobs:
  init:
    name: Initiate pipeline
    runs-on: windows-latest
    # defaults:
    #   run:
    #     shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Bump release version and create release tag
      #   id: tag_generator
      #   uses: mathieudutour/github-tag-action@v5
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     default_bump: false 



      # - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      - name: Write to tag.txt
        run: '"1.0.0" | Out-File -FilePath "tag.txt"'

      # - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      - name: Upload tag.txt
        uses: actions/upload-artifact@v2
        with:
          name: TagText
          path: tag.txt

      - name: Assign tag.txt to ps variable and then to output
        id: tag_text 
        run: |
          $file_text = Get-Content "tag.txt"
          echo "::set-output name=new_version::$file_text"

      - run: echo ${{ steps.tag_text.outputs.new_version }}

      - uses: actions/download-artifact@v2 
        with:
          name: TagText
          path: TagText/tag.$file_text.txt

      # - run: echo NEW_VALUE >> tag.txt

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: TagText
      #     path: tag.txt

      # - name: Output test
      #   id: output_test
      #   run: |
      #     input_file="tag.txt"
      #     while read line
      #     do
      #       file_text=$line
      #     done < "$input_file"
      #     echo ::set-output name=tag_value::$file_text

      # - run: echo ${{ steps.output_test.outputs.tag_value }}



      # - name: Publish NuGet package
      #   id: publish_nuget
      #   uses: rohith/publish-nuget@v2
      #   continue-on-error: true
      #   with:
      #       PROJECT_FILE_PATH: OctocatApp.csproj
      #       TAG_COMMIT: true
      #       NUGET_KEY: ${{secrets.TEST_PKG}}
      #       PACKAGE_NAME: OctocatApp-testpkg

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.tag_generator.outputs.new_tag }}
      #     release_name: Release ${{ steps.tag_generator.outputs.new_tag }}
      #     body: '[CHANGE LOG](HISTORY.md)'

      # - name: Upload Release Asset
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: OctocatApp.csproj
      #     asset_name: OctocatApp.${{ steps.tag_generator.outputs.new_version }}.csproj
      #     asset_content_type: application/csproj

      # - name: Upload Release Asset
      #   id: upload_release_asset2
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: OctocatApp.sln
      #     asset_name: OctocatApp.${{ steps.tag_generator.outputs.new_tag }}.sln
      #     asset_content_type: application/sln

      # - name: Upload Release Asset
      #   id: upload_release_asset3
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: Program.cs
      #     asset_name: Program.${{ steps.tag_generator.outputs.new_tag }}.cs
      #     asset_content_type: application/cs
